{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-26T15:12:19.368Z",
    "end": "2024-09-26T15:12:19.797Z",
    "duration": 429,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ba8e60f4-8502-474f-a05c-57ee0bfdac47",
      "title": "",
      "fullFile": "C:\\Users\\jhona\\Desktop\\microtaller2\\api.test.js",
      "file": "\\api.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 38,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const chai = await import('chai');\nexpect = chai.expect;",
          "err": {},
          "uuid": "7efe2640-59ef-4437-8771-68be20b59283",
          "parentUUID": "ba8e60f4-8502-474f-a05c-57ee0bfdac47",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5dacc079-988c-4b24-86a4-16c06e0b7bc4",
          "title": "User API",
          "fullFile": "C:\\Users\\jhona\\Desktop\\microtaller2\\api.test.js",
          "file": "\\api.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User API\"",
              "fullTitle": "User API \"before all\" hook in \"User API\"",
              "timedOut": false,
              "duration": 9,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "userData = {\n    username: faker.internet.userName(),\n    email: faker.internet.email(),\n    password: faker.internet.password(12)\n};",
              "err": {},
              "uuid": "ac672140-f7a7-445f-8e40-b81a6acdea83",
              "parentUUID": "5dacc079-988c-4b24-86a4-16c06e0b7bc4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new user",
              "fullTitle": "User API should create a new user",
              "timedOut": false,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(baseUrl)\n    .post('/users')\n    .send({\n        username: userData.username,\n        email: userData.email,\n        password: userData.password\n    });\nexpect(res.statusCode).to.equal(201);\nexpect(res.body).to.have.property('id');",
              "err": {},
              "uuid": "b34275b8-a00d-42e3-aaa9-2d626cb6287d",
              "parentUUID": "5dacc079-988c-4b24-86a4-16c06e0b7bc4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login and return a JWT token",
              "fullTitle": "User API should login and return a JWT token",
              "timedOut": false,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(baseUrl)\n    .post('/login')\n    .send({\n        username: userData.username,\n        password: userData.password\n    });\nexpect(res.statusCode).to.equal(200);\nexpect(res.body).to.have.property('token');\ntoken = res.body.token;",
              "err": {},
              "uuid": "fb5059d4-18a0-4745-9537-2ee85d2322c9",
              "parentUUID": "5dacc079-988c-4b24-86a4-16c06e0b7bc4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the user information",
              "fullTitle": "User API should update the user information",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedEmail = faker.internet.email();\nconst res = await request(baseUrl)\n    .put('/update_user')\n    .set('Authorization', `Bearer ${token}`)\n    .send({\n        username: userData.username,\n        email: updatedEmail\n    });\nexpect(res.statusCode).to.equal(204);",
              "err": {},
              "uuid": "789d9918-3cb0-4931-a42e-f972f640500d",
              "parentUUID": "5dacc079-988c-4b24-86a4-16c06e0b7bc4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b34275b8-a00d-42e3-aaa9-2d626cb6287d",
            "fb5059d4-18a0-4745-9537-2ee85d2322c9",
            "789d9918-3cb0-4931-a42e-f972f640500d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}